name: Build and Push React App to Azure Container Registry

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Create and use a new builder that properly supports caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build without push first to test if the image builds correctly
      - name: Test Image Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/react-app:test
          platforms: linux/amd64
          load: true
          # Removed cache options that were causing errors

      # Then build with all options and push
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/react-app:latest
            ${{ secrets.ACR_LOGIN_SERVER }}/react-app:${{ github.sha }}
          # Removed cache options that were causing errors

      - name: Smoke Test - Verify Image
        run: |
          # Get the image reference
          IMAGE_REF="${{ secrets.ACR_LOGIN_SERVER }}/react-app:latest"
          
          # Pull the image
          docker pull $IMAGE_REF
          
          # Show image details
          echo "Image details:"
          docker inspect $IMAGE_REF
          
          # Run the container with a simple command to verify it starts
          echo "Running smoke test container..."
          CONTAINER_ID=$(docker run -d -p 8080:80 $IMAGE_REF)
          
          # Check if container started successfully
          if [ -z "$CONTAINER_ID" ]; then
            echo "Failed to start container for smoke test"
            exit 1
          fi
          
          # Wait for container to initialize
          sleep 5
          
          # Get logs
          echo "Container logs:"
          docker logs $CONTAINER_ID
          
          # Check if container is running
          CONTAINER_STATUS=$(docker inspect $CONTAINER_ID --format='{{.State.Status}}')
          
          # Clean up container
          docker stop $CONTAINER_ID
          docker rm $CONTAINER_ID
          
          # Check status
          if [ "$CONTAINER_STATUS" != "running" ]; then
            echo "Smoke test failed: Container is not running"
            exit 1
          fi
          
          echo "Smoke test passed: React app container is running"